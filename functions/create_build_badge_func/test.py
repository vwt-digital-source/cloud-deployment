import sys
import base64
import json
from main import create_build_badge_func


class Context:
    def __init__(self):
        self.properties = {}

jsonmsg = {"id":"6789564f-a885-4442-9d15-b7fbaeb3e3cc","projectId":"vwt-d-gew1-dat-deployment","status":"SUCCESS","source":{"repoSource":{"projectId":"vwt-d-gew1-dat-deployment","repoName":"github_vwt-digital_dat-deployment-config","branchName":"develop"}},"steps":[{"name":"gcr.io/cloud-builders/gcloud","args":["services","enable","cloudbuild.googleapis.com","pubsub.googleapis.com","deploymentmanager.googleapis.com","cloudfunctions.googleapis.com"],"timing":{"startTime":"2019-05-04T12:40:15.420102344Z","endTime":"2019-05-04T12:40:35.901782125Z"},"pullTiming":{"startTime":"2019-05-04T12:40:15.420102344Z","endTime":"2019-05-04T12:40:15.517935529Z"},"status":"SUCCESS"},{"name":"gcr.io/cloud-builders/gcloud","args":["-c","curl https://vwt-digital.github.io/project-company-data.github.io/gcp-templates/deploy_data_catalog.sh | bash /dev/stdin vwt-d-gew1-dat-deployment-dcat-deploy config/vwt-d-gew1-dat-deployment/data_catalog.json vwt-d-gew1-dat-deployment\n"],"entrypoint":"bash","timing":{"startTime":"2019-05-04T12:40:35.901844626Z","endTime":"2019-05-04T12:40:56.015710821Z"},"pullTiming":{"startTime":"2019-05-04T12:40:35.901844626Z","endTime":"2019-05-04T12:40:36.010846919Z"},"status":"SUCCESS"},{"name":"gcr.io/cloud-builders/git","args":["clone","--branch=develop","https://github.com/vwt-digital/cloud-deployment.git"],"timing":{"startTime":"2019-05-04T12:40:56.015764070Z","endTime":"2019-05-04T12:40:57.255518799Z"},"pullTiming":{"startTime":"2019-05-04T12:40:56.015764070Z","endTime":"2019-05-04T12:40:56.112569762Z"},"status":"SUCCESS"},{"name":"gcr.io/cloud-builders/gcloud","args":["-c","gcloud builds submit --substitutions=$(../../../config/vwt-d-gew1-dat-deployment/publish_build_result_func.config.sh) .\n"],"dir":"cloud-deployment/functions/publish_build_result_func","entrypoint":"bash","timing":{"startTime":"2019-05-04T12:40:57.255572494Z","endTime":"2019-05-04T12:42:25.894990996Z"},"pullTiming":{"startTime":"2019-05-04T12:40:57.255572494Z","endTime":"2019-05-04T12:40:57.354282141Z"},"status":"SUCCESS"},{"name":"gcr.io/cloud-builders/gcloud","args":["-c","gcloud builds submit --substitutions=$(../../../config/vwt-d-gew1-dat-deployment/create_build_badge_func.config.sh) .\n"],"dir":"cloud-deployment/functions/create_build_badge_func","entrypoint":"bash","timing":{"startTime":"2019-05-04T12:42:25.895062030Z","endTime":"2019-05-04T12:43:57.620669893Z"},"pullTiming":{"startTime":"2019-05-04T12:42:25.895062030Z","endTime":"2019-05-04T12:42:26.004758647Z"},"status":"SUCCESS"}],"results":{"buildStepImages":["sha256:b7767520af77edadeec2479d1eeb9dfce0fb68cb850d5ff441ba43e49df4dd1e","sha256:b7767520af77edadeec2479d1eeb9dfce0fb68cb850d5ff441ba43e49df4dd1e","sha256:f7ca027bdaf28718f6ac638bde31b964077002d79db0b2643bcd1e54d43288de","sha256:b7767520af77edadeec2479d1eeb9dfce0fb68cb850d5ff441ba43e49df4dd1e","sha256:b7767520af77edadeec2479d1eeb9dfce0fb68cb850d5ff441ba43e49df4dd1e"],"buildStepOutputs":[]},"createTime":"2019-05-04T12:39:55.988407708Z","startTime":"2019-05-04T12:39:56.902281099Z","finishTime":"2019-05-04T12:43:58.658848Z","timeout":"600s","logsBucket":"gs://696949580831.cloudbuild-logs.googleusercontent.com","sourceProvenance":{"resolvedRepoSource":{"projectId":"vwt-d-gew1-dat-deployment","repoName":"github_vwt-digital_dat-deployment-config","commitSha":"6505bd13a1972d5c7d9184ec99483e0dad2c46dc"}},"buildTriggerId":"92ee3ebd-122b-4086-be3a-810d86f1ccac","options":{"substitutionOption":"ALLOW_LOOSE","logging":"LEGACY"},"logUrl":"https://console.cloud.google.com/gcr/builds/6789564f-a885-4442-9d15-b7fbaeb3e3cc?project=696949580831","tags":["event-81cb9c9e-bd15-4a8a-afef-c3b2290e2aba","trigger-92ee3ebd-122b-4086-be3a-810d86f1ccac"],"timing":{"BUILD":{"startTime":"2019-05-04T12:40:15.420052190Z","endTime":"2019-05-04T12:43:57.715304874Z"},"FETCHSOURCE":{"startTime":"2019-05-04T12:40:11.605891897Z","endTime":"2019-05-04T12:40:15.318419020Z"}}}
msg = {}
msg['data'] = base64.b64encode(json.dumps(jsonmsg).encode('utf-8'))

context = Context()

print(create_build_badge_func(msg, context))
